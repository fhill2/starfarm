#!/usr/bin/python
# this script will never unstar repos
from get import *
import time
import shutil
from globals import home, PLUGIN_DIR, REPO_DIR
import multiprocessing
start = time.perf_counter()


print("Retrieving stars from github...")
# get_stars
manager = multiprocessing.Manager()
stars = manager.list()
p = multiprocessing.Process(target=get_stars, args=([stars]))
p.start()

packer = get_packer()
fs = get_fs()
syms = get_syms()
config = get_config()
unsorted = get_unsorted()

# print(f"Completed Getting Data in {time.perf_counter() - start} seconds")



mkdir(REPO_SYM_DIR)

# wait to get stars
p.join()
# print(f"Get Stars done in {time.perf_counter() - start} seconds")
stars_nopacker = filter_by_fullname(stars, packer)
stars_nopacker_nofs = filter_by_fullname(stars_nopacker, fs)





# REPOS


# find repos I have starred, downloaded, then unstarred
repos_to_clean = filter_by_fullname(fs, stars_nopacker)
print(steps(1) + "for fs not in stars - remove...")
for repo in repos_to_clean:
    dest = os.path.join(REPO_DIR, repo["full_name"])
    print("- Removing Repo from fs: " + dest)
    shutil.rmtree(dest)


# then download the rest
print(steps(2) + "for stars not in fs - clone..")
if len(stars_nopacker_nofs) > 0:
    clone_all(stars_nopacker_nofs)

print(steps(3) + "for config not in fs - clone...")
config_nofs = filter_by_fullname(filter_by_fullname(config, packer), fs)
for repo in config_nofs:
    clone(repo)

print(steps(4) + "for stars not in config - modify tags_unsorted.yaml...")
stars_noconfig = filter_by_fullname(stars, config)
# find the difference only to print new
stars_noconfig_nounsorted = filter_by_fullname(stars_noconfig, unsorted)
unsorted_nostars = filter_by_fullname(unsorted, stars)
for repo in unsorted_nostars:
    print("- tags_unsorted: " + repo["full_name"])

for repo in stars_noconfig_nounsorted:
    print("+ tags_unsorted: " + repo["full_name"])

# write all the results again instead of appending
with open('tags_unsorted.yaml', 'w') as file:
    yaml.dump([repo["full_name"] for repo in stars_noconfig], file)


# at this point, the fs and unsorted have been modified, so get them again
unsorted = get_unsorted()
fs = get_fs()
syms_to_create = filter_by_fullname_tag(config + unsorted, syms)
syms_to_remove = filter_by_fullname_tag(syms, config + unsorted)


#  SYMLINKS 
print(steps(5) + "for syms not in config - remove syms")
for repo in syms_to_remove:
    owner_name = repo["owner"] + "|" + repo["name"]
    target = os.path.join(REPO_SYM_DIR, repo["tag"], owner_name)
    os.remove(target)
    print("- Removing symlink: " + target)

print(steps(6) + "for config not in syms - create syms...")
for repo in syms_to_create:
    mkdir(os.path.join(REPO_SYM_DIR, repo["tag"]))
    source = os.path.join(REPO_DIR, repo["full_name"])
    dest = os.path.join(REPO_SYM_DIR, repo["tag"], repo["full_name"].replace("/", "|"))
    os.symlink(source, dest)
    print("+ " + source + " --> " + dest)



print(steps(7) + "for config not in stars - starring...")
 
config_nostars = filter_by_fullname(config, stars)
for repo in config_nostars:
    if repo["star"]:
        star(repo)

print(steps(8) + "for packer not in stars - starring...")
packer_nostars = filter_by_fullname(packer, stars)
for plugin in packer_nostars:
    star(plugin)


print(steps(9) + "removing empty folders...")
remove_empty_folders(REPO_DIR)
remove_empty_folders(REPO_SYM_DIR)
